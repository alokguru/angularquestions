--------------------------------------------------------------------------------
https://www.code-sample.com/2019/02/angular-8-interview-questions-and.html-----
--------------------------------------------------------------------------------




-----------------------------------------------------
https://hackr.io/blog/angular-interview-questions----
-----------------------------------------------------

Question: Can you give us an overview of Angular architecture?
Answer: You can draw some like this:
https://hackr.io/blog/uploads/images/1570190912nVsPYyUCFu.jpg
----------------
Question: Please explain the differences between Angular and jQuery?
Nonetheless, notable differences between Angular and jQuery are:

Angular has two-way data binding, jQuery does not
Angular provides support for RESTful API while jQuery doesn’t
jQuery doesn’t offer deep linking routing though Angular supports it
There is no form validation in jQuery whereas it is present in Angular
--------------------
Question: Why prioritize TypeScript over JavaScript in Angular?
Answer: TypeScript is developed by Microsoft and it is a superset of JavaScript. The issue with JS is that it isn’t a true OOP language.
As the JS code doesn’t follow the Prototype Pattern, the bigger the size of the code the messier it gets. 
Hence, it leads to difficulties in maintainability as well as reusability. To offset this, TypeScript follows a strict OOP approach.
-----------
Question: What is Data Binding? How many ways it can be done?
Answer: In order to connect application data with the DOM (Data Object Model), data binding is used. It happens between the template
(HTML) and component (TypeScript). There are 3 ways to achieve data binding:

Event Binding – Enables the application to respond to user input in the target environment
Property Binding – Enables interpolation of values computed from application data into the HTML
Two-way Binding – Changes made in the application state gets automatically reflected in the view and vice-versa. The ngModel directive 
is used for achieving this type of data binding.
-----------
Question: What is AOT (Ahead-Of-Time) Compilation?
Answer: Each Angular app gets compiled internally. The Angular compiler takes in the JS code, compiles it and then produces some JS code.
This happens only once per occasion per user. It is known as AOT (Ahead-Of-Time) compilation.
------------
Question: Can you draw a comparison between the service() and the factory() functions?
Answer: Used for the business layer of the application, the service() function operates as a constructor function. The function is 
invoked at runtime using the new keyword.

Although the factory() function works in pretty much the same way as the service() function does, the former is more flexible and
powerful. In actual, the factory() function are design patterns that help in creating objects.
-------------
Question: What is demonstrated by the arrow in the following image?
https://hackr.io/blog/uploads/images/1570190912lWxuqM2B5M.jpg
Angular dependency injection
Answer: This represents a dependency injection or DI.
-------------
Question: What is ViewEncapsulation and how many ways are there do to do it in Angular?
Answer: To put simply, ViewEncapsulation determines whether the styles defined in a particular component will affect the entire 
application or not. Angular supports 3 types of ViewEncapsulation:

Emulated – Styles used in other HTML spread to the component
Native – Styles used in other HTML doesn’t spread to the component
None – Styles defined in a component are visible to all components of the application
----------
Question: What is the process called by which TypeScript code is converted into JavaScript code?
Answer: It is called Transpiling. Even though TypeScript is used for writing code in Angular applications, it gets internally transpiled 
into equivalent JavaScript.

---------
Question: What is Angular Material?
Answer: It is a UI component library. Angular Material helps in creating attractive, consistent, and fully functional web pages 
as well as web applications. It does so while following modern web design principles, including browser portability and graceful
degradation.
---------
Question: What is ngOnInit ()? How to define it?
Answer: ngOnInit () is a lifecycle hook that is called after Angular has finished initializing all data-bound properties of a directive. 
It is defined as:

Interface OnInit {
 ngOnInit () : void
 }
 ----------
Question: What is new in Angular 6?
Answer: Here are some of the new aspects introduced in Angular 6:

Angular Elements – It allows converting Angular components into web components and embeds the same in some non-Angular application
Tree Shakeable Provider – Angular 6 introduces a new way of registering a provider directly inside the @Injectable() decorator.
It is achieved by using the providedIn attribute
RxJS 6 – Angular 6 makes use of RxJS 6 internally
i18n (internationalization) – Without having to build the application once per locale, any Angular application can have “runtime i18n”

----------
Question: Could you explain the various types of filters in Angular.
Answer: In order to format the value of expression so that it can be displayed to the user, Angular has filters. It is possible to add these filters to the controllers, directives, services, or templates. Angular also provides support for creating custom filters.

Organizing data in such a way so that it is displayed only when certain criteria are fulfilled is made possible using filters. Filters are added to the expressions using the pipe ‘|’ character. Various types of Angular filters are enumerated as follows:

currency – Formats a number to the currency format
date – Formats a data to some specific format
filter – Selects a subset of items from an array
json – Formats an object to a JSON string
limitTo – Limits an array or string into a specified number of characters or elements
lowercase – Formats a string to lowercase
number – Formats a number to a string
orderBy – Orders an array by an expression
